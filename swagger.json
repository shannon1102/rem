{
  "swagger": "2.0",
  "info": {
    "description": "em Vuong Hong Apis",
    "version": "1.0.0",
    "title": "Rem Vuong Hong Apis",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
 
  "host": "localhost:5000",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "paths": {
    "/post/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "postsPerPage",
            "in": "query",
            "description": "Max posts can be display in one page",
            "required": false
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number",
            "required": false
          },
          {
            "name": "orderType",
            "in": "query",
            "description": "Order type to display: 'newest' or 'oldest' or null",
            "required": false
          }
        ],
        "tags": [
          "Post Api"
        ],
        "summary": "Get Posts",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/post"
              }
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "require": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "url_image": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                },
                "tag_id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "tags": [
          "Post Api"
        ],
        "summary": "Create Post",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "insertedId": {
                  "type": "integer"
                }
              }
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/post/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "Post Api"
        ],
        "summary": "Get Post by Id",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/post"
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "description": "ID of post",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "url_image": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                },
                "tag_id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "tags": [
          "Post Api"
        ],
        "summary": "Update Post by ID",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/success"
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "Post Api"
        ],
        "summary": "Delete post by ID",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/success"
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/post/get-by-slug/{slug}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "slug",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "Post Api"
        ],
        "summary": "Get Post by Id",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/post"
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/post/get-by-tag-id/{tag_id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tag_id",
            "type": "integer",
            "in": "path",
            "required": true
          },
          {
            "name": "postsPerPage",
            "in": "query",
            "description": "Max posts can be display in one page",
            "required": false
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number",
            "required": false
          },
          {
            "name": "orderType",
            "in": "query",
            "description": "Order type to display: 'newest' or 'oldest' or null",
            "required": false
          }
        ],
        "tags": [
          "Post Api"
        ],
        "summary": "Get Post by Tag Id",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/post"
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/post/get-by-tag-slug/{tag_slug}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tag_slug",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "postsPerPage",
            "in": "query",
            "description": "Max posts can be display in one page",
            "required": false
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number",
            "required": false
          },
          {
            "name": "orderType",
            "in": "query",
            "description": "Order type to display: 'newest' or 'oldest' or null",
            "required": false
          }
        ],
        "tags": [
          "Post Api"
        ],
        "summary": "Get post by Tag slug",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/post"
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/product/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productsPerPage",
            "in": "query",
            "description": "Max products can be display in one page",
            "required": false
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number",
            "required": false
          },
          {
            "name": "orderType",
            "in": "query",
            "description": "Order type to display: 1-oldest 2-newest ",
            "required": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "for search request for Front End",
            "required": false
          }
        ],
        "tags": [
          "Product Api"
        ],
        "summary": "Get Products",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/product"
              }
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "require": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "model_number": {
                  "type": "string"
                },
                "list_product_images": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "minItems": 0,
                    "maxItems":6
                  }
                },
                "origin": {
                  "type": "string"
                },
                "brand": {
                  "type": "string"
                },
                "thickness": {
                  "type": "string"
                },
                "price": {
                  "type": "string"
                },
                "size": {
                  "type": "string"
                },
                "material": {
                  "type": "string"
                },
                "weight": {
                  "type": "string"
                },
                "feature": {
                  "type": "string"
                },
                "repeat_deg": {
                  "type": "string"
                },
                "category_id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "tags": [
          "Product Api"
        ],
        "summary": "Create Product",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "insertedId": {
                  "type": "integer"
                }
              }
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/product/product-image/lib": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productsPerPage",
            "in": "query",
            "description": "Max products can be display in one page",
            "required": false
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number",
            "required": false
          },
          {
            "name": "orderType",
            "in": "query",
            "description": "Order type to display: 1-oldest 2-newest ",
            "required": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "for search request for Front End",
            "required": false
          }
        ],
        "tags": [
          "Product Api"
        ],
        "summary": "Get Lib Image",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/product"
              }
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/product/get-by-category-id/{category_id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "category_id",
            "type": "integer",
            "in": "path",
            "required": true
          },
          {
            "name": "productsPerPage",
            "in": "query",
            "description": "Max products can be display in one page",
            "required": false
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number",
            "required": false
          },
          {
            "name": "orderType",
            "in": "query",
            "description": "Order type to display: 1-oldest 2-newest ",
            "required": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "for search request for Front End",
            "required": false
          }
        ],
        "tags": [
          "Product Api"
        ],
        "summary": "Get Products By Category",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/product"
              }
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/product/get-by-category-slug/{slug}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "slug",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "productsPerPage",
            "in": "query",
            "description": "Max products can be display in one page",
            "required": false
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number",
            "required": false
          },
          {
            "name": "orderType",
            "in": "query",
            "description": "Order type to display: 1-oldest 2-newest ",
            "required": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "for search request for Front End",
            "required": false
          }
        ],
        "tags": [
          "Product Api"
        ],
        "summary": "Get Products By Category Slug",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/product"
              }
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/product/get-by-main-category-id/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "required": true
          },
          {
            "name": "productsPerPage",
            "in": "query",
            "description": "Max products can be display in one page",
            "required": false
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number",
            "required": false
          },
          {
            "name": "orderType",
            "in": "query",
            "description": "Order type to display: 1-oldest 2-newest ",
            "required": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "for search request for Front End",
            "required": false
          }
        ],
        "tags": [
          "Product Api"
        ],
        "summary": "Get Products By Main Category Id",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/product"
              }
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/product/get-by-main-category-slug/{slug}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "slug",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "productsPerPage",
            "in": "query",
            "description": "Max products can be display in one page",
            "required": false
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number",
            "required": false
          },
          {
            "name": "orderType",
            "in": "query",
            "description": "Order type to display: 1-oldest 2-newest ",
            "required": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "for search request for Front End",
            "required": false
          }
        ],
        "tags": [
          "Product Api"
        ],
        "summary": "Get Products By Main Category Slug",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/product"
              }
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/product/get-by-slug/{slug}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "slug",
            "type": "string",
            "in": "path",
            "description": "slug of product",
            "required": true
          }
        ],
        "tags": [
          "Product Api"
        ],
        "summary": "Get Products By Slug",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/product"
              }
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/product/get-by-category-and-material/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "main_category_name",
            "in": "query",
            "description": "main category name of product",
            "required": false
          },
          {
            "name": "category_name",
            "in": "query",
            "description": "category_name of product",
            "required": false
          },
          {
            "name": "material",
            "in": "query",
            "description": "material of product",
            "required": false
          },
          {
            "name": "productsPerPage",
            "in": "query",
            "description": "Max products can be display in one page",
            "required": false
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number",
            "required": false
          },
          {
            "name": "orderType",
            "in": "query",
            "description": "Order type to display: 1-oldest 2-newest ",
            "required": false
          }
          
        ],
        "tags": [
          "Product Api"
        ],
        "summary": "Get Products By Category anh Material For Filter",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/product"
              }
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/product/get-all-brand/list/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
        ],
        "tags": [
          "Product Api"
        ],
        "summary": "Get List Brand",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/success"
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/product/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "Product Api"
        ],
        "summary": "Get Product by Id",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/product"
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "description": "ID of post",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "model_number": {
                  "type": "string"
                },
                "list_product_images": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "minItems": 0,
                    "maxItems":6
                  }
                },
                "origin": {
                  "type": "string"
                },
                "brand": {
                  "type": "string"
                },
                "thickness": {
                  "type": "string"
                },
                "price": {
                  "type": "string"
                },
                "size": {
                  "type": "string"
                },
                "material": {
                  "type": "string"
                },
                "weight": {
                  "type": "string"
                },
                "feature": {
                  "type": "string"
                },
                "repeat_deg": {
                  "type": "string"
                },
                "category_id": {
                  "type": "integer"
                } 
              }
            }
          }
        ],
        "tags": [
          "Product Api"
        ],
        "summary": "Update Product by ID",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/success"
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "Product Api"
        ],
        "summary": "Delete product by ID",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/success"
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/product/get-by-model-number/{code}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "in": "path",
            "required": true
          },{
            "name": "productsPerPage",
            "in": "query",
            "description": "Max products can be display in one page",
            "required": false
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number",
            "required": false
          },
          {
            "name": "orderType",
            "in": "query",
            "description": "Order type to display: 1-oldest 2-newest ",
            "required": false
          }
        ],
        "tags": [
          "Product Api"
        ],
        "summary": "Get Product By model-number ",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/product"
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/hot-product/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productsPerPage",
            "in": "query",
            "description": "Max products can be display in one page",
            "required": false
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number",
            "required": false
          },
          {
            "name": "orderType",
            "in": "query",
            "description": "Order type to display: 1-oldest 2-newest ",
            "required": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "for search request for Front End",
            "required": false
          }
        ],
        "tags": [
          "Hot-Product Api"
        ],
        "summary": "Get Hot Products",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/product"
              }
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/hot-product/unset/{product_id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "product_id",
            "type": "integer",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "Hot-Product Api"
        ],
        "summary": "Remove hot-product by ID",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/success"
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/hot-product/set/{product_id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "product_id",
            "type": "integer",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "Hot-Product Api"
        ],
        "summary": "Add hot-product by ID",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/success"
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/main-category/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "main-categoryPerPage",
            "in": "query",
            "description": "Max main-category can be display in one page",
            "required": false
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number",
            "required": false
          },
          {
            "name": "orderType",
            "in": "query",
            "description": "Order type to display: 1-oldest 2-newest ",
            "required": false
          }
        ],
        "tags": [
          "Main-Category Api"
        ],
        "summary": "Get Main-Category",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main-category"
              }
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "require": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "url_image": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Main-Category Api"
        ],
        "summary": "Create Main-Category",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "insertedId": {
                  "type": "integer"
                }
              }
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/main-category/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "Main-Category Api"
        ],
        "summary": "Get Main-Category by Id",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/main-category"
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "description": "ID of post",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "url_image": {
                  "type": "string"
                },
                "sub_image": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Main-Category Api"
        ],
        "summary": "Update Main-Category by ID",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/success"
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "Main-Category Api"
        ],
        "summary": "Delete Main-Category by ID",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/success"
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/category/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "categoryPerPage",
            "in": "query",
            "description": "Max category can be display in one page",
            "required": false
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number",
            "required": false
          },
          {
            "name": "orderType",
            "in": "query",
            "description": "Order type to display: 1-oldest 2-newest ",
            "required": false
          }
        ],
        "tags": [
          "Category Api"
        ],
        "summary": "Get Category",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/category"
              }
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "require": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "main_category_id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "tags": [
          "Category Api"
        ],
        "summary": "Create Category",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "insertedId": {
                  "type": "integer"
                }
              }
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/category/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "Category Api"
        ],
        "summary": "Get Category by Id",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/category"
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "description": "ID of category",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "main_category_id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "tags": [
          "Category Api"
        ],
        "summary": "Update Category by ID",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/success"
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "Category Api"
        ],
        "summary": "Delete Category by ID",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/success"
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/tag/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tagPerPage",
            "in": "query",
            "description": "Max tag can be display in one page",
            "required": false
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number",
            "required": false
          },
          {
            "name": "orderType",
            "in": "query",
            "description": "Order type to display: 1-oldest 2-newest ",
            "required": false
          }
        ],
        "tags": [
          "Tag Api"
        ],
        "summary": "Get tags",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/tag"
              }
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "require": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Tag Api"
        ],
        "summary": "Create tag",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "insertedId": {
                  "type": "integer"
                }
              }
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/tag/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "Tag Api"
        ],
        "summary": "Get tag by Id",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/tag"
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "description": "ID of tag",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Tag Api"
        ],
        "summary": "Update tag by ID",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/success"
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "Tag Api"
        ],
        "summary": "Delete tag by ID",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/success"
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/tag/get-by-slug/{slug}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "slug",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "Tag Api"
        ],
        "summary": "Get tag by Slug",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/tag"
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/inquiry/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "item per Page",
            "in": "query",
            "description": "Max Inquiry can be display in one page",
            "required": false
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number",
            "required": false
          },
          {
            "name": "orderType",
            "in": "query",
            "description": "Order type to display: 'newest' or 'oldest' or null",
            "required": false
          }
        ],
        "tags": [
          "Inquiry Api"
        ],
        "summary": "Get Inquiry",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/inquiry"
              }
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "require": true,
            "schema": {
              "type": "object",
              "properties": {
                "customer_name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "product_name": {
                  "type": "string"
                },
                "product_id": {
                  "type": "integer"
                },
                "product_link": {
                  "type": "string"
                },
                "quantity": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "tags": [
          "Inquiry Api"
        ],
        "summary": "Create Inquiry",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "insertedId": {
                  "type": "integer"
                }
              }
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/inquiry/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "Inquiry Api"
        ],
        "summary": "Get inquiry by Id",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/inquiry"
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "Inquiry Api"
        ],
        "summary": "Delete Inquiry by ID",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/success"
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/inquiry/get-by-customer-name/{name}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "Inquiry Api"
        ],
        "summary": "Get Inquiry by Name",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/inquiry"
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/user/information": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "User Api"
        ],
        "summary": "Get User Informarion",
        "description": "Get you information",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              }
            }
          },
        "500": {
          "description": "error",
          "schema": {
            "$ref": "#/definitions/error"
          }
        }
        }
      }
    },
    "/user/signup": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "require": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "User Api"
        ],
        "summary": "Create New User",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "access-token": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "require": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "User Api"
        ],
        "summary": "Login User",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "access-token": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/user/change-password": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "oldPassword": {
                  "type": "string"
                },
                "newPassword": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "User Api"
        ],
        "summary": "Admin change password",
        "description": "",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "access-token": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "post": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "tag_id": {
          "$ref": "#/definitions/tag"
        },
        "created_at": {
          "type": "string",
          "example": "2020-01-08T13:25:50"
        },
        "updated_at": {
          "type": "string",
          "example": "2020-01-08T13:25:50"
        }
      }
    },
    "product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "model_number": {
          "type": "string"
        },
        "main_image_url": {
          "type": "string"
        },
        "price": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "material": {
          "type": "string"
        },
        "weight": {
          "type": "string"
        },
        "feature": {
          "type": "string"
        },
        "repeat_deg": {
          "type": "string"
        },
        "category_id": {
          "$ref": "#/definitions/category"
        },
        "created_at": {
          "type": "string",
          "example": "2020-01-08T13:25:50"
        },
        "updated_at": {
          "type": "string",
          "example": "2020-01-08T13:25:50"
        }
      }
    },
    "hot-product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "product_id": {
          "$ref": "#/definitions/product"
        }
      }
    },
    "main-category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "image_url": {
          "type": "string"
        },
        "sub_category": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/category"
          }
        }
      }
    },
    "category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "main_category": {
          "$ref": "#/definitions/main-category"
        }
      }
    },
    "company-profile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "mail": {
          "type": "string"
        },
        "basic_information": {
          "type": "string"
        },
        "url_image": {
          "type": "string"
        }
      }
    },
    "tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        }
      }
    },
    "inquiry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "customer_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "product_id": {
          "type": "integer"
        },
        "quantity": {
          "type": "integer"
        }
      }
    },
    "error": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "success": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    }
  }
}